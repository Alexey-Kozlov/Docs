apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-grafana-conf
  labels:
    name: pv-grafana-conf
spec:
  storageClassName: hostpath
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /host_mnt/home/alex/data/Grafana_Conf
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-grafana-conf
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: pv-grafana-conf
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-grafana-data
  labels:
    name: pv-grafana-data
spec:
  storageClassName: hostpath
  capacity:
    storage: 1Gi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /host_mnt/home/alex/data/Grafana_Data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-grafana-data
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      name: pv-grafana-data
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  replicas: 1
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:11.6.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        volumeMounts:
          - mountPath: /etc/grafana
            name: graf-conf
          - mountPath: /var/lib/grafana
            name: graf-data
        env:
          - name: GF_SECURITY_ADMIN_USER
            value: admin
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: admin
      volumes:
      - name: graf-conf
        persistentVolumeClaim:
          claimName: pvc-grafana-conf
      - name: graf-data
        persistentVolumeClaim:
          claimName: pvc-grafana-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-ip-service
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3000
    nodePort: 30439
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
 name: grafana-cluster-ip-service
spec:
 type: ClusterIP
 selector:
  app: grafana
 ports:
  - name: grafana
    protocol: TCP
    port: 3000
    targetPort: 3000
